image: registry.gitlab.ics.muni.cz:443/muni-kypo-images/kali-2019.4/packer

variables:
  CI_OS_NAME: "windows-server"
  CI_OS_TYPE: "windows"
  CI_OS_DISTRO: "windows"
  CI_CLOUD_USER: "windows"
  OS_AUTH_TYPE: "v3applicationcredential"
  OS_AUTH_URL: "https://identity.cloud.muni.cz/v3"
  OS_IDENTITY_API_VERSION: "3"
  OS_INTERFACE: "public"
  OS_REGION_NAME: "brno1"

stages:
  - validate
  - build
  - test
  - deploy

validate:
  stage: validate
  script:
    - packer --version
    - packer validate $CI_OS_NAME.json
  needs: []

build-qemu:
  stage: build
  script:
    - wget -nv -nc https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/stable-virtio/virtio-win.iso -O virtio-win.iso
    - packer build -only=$CI_OS_NAME-qemu $CI_OS_NAME.json
  artifacts:
    paths:
      - target-qemu/*
  when: manual
  allow_failure: false
  resource_group: virtual-machine
  needs: ["validate"]

build-vbox:
  stage: build
  script:
    - packer build -only=$CI_OS_NAME-vbox $CI_OS_NAME.json
  artifacts:
    paths:
      - target-vbox/*
  when: manual
  allow_failure: false
  resource_group: virtual-machine
  needs: ["validate"]

test-qemu:
  stage: test
  script:
    - ssh-keygen -f ./id_rsa -N "" -C mykey -m pem
    - mkdir -p drive/openstack/latest
    - echo "{\"uuid\":\"d8e02d56-2648-49a3-bf97-6be8f1204f38\", \"public_keys\":{\"mykey\":\"`cat id_rsa.pub`\"}}" > drive/openstack/latest/meta_data.json
    - printf "distinguished_name = req_distinguished_name\n[req_distinguished_name]\n[v3_req_client]\nextendedKeyUsage = clientAuth\nsubjectAltName = otherName:1.3.6.1.4.1.311.20.2.3;UTF8:$CI_CLOUD_USER@localhost\n" > openssl.conf
    - OPENSSL_CONF=openssl.conf openssl req -x509 -nodes -days 3650 -new -key id_rsa -out drive/openstack/latest/user_data -outform PEM -subj "/CN=$CI_CLOUD_USER" -extensions v3_req_client
    - mkisofs -R -J -V config-2 -o config.img drive/
    - qemu-system-x86_64 -accel kvm -m size=4096 -net nic -net user,hostfwd=tcp::2222-:22,hostfwd=tcp::55986-:5986 -cdrom config.img target-qemu/* &
    - printf "winrm ansible_user=$CI_CLOUD_USER ansible_port=55986 ansible_host=127.0.0.1 ansible_connection=winrm ansible_winrm_server_cert_validation=ignore ansible_winrm_cert_pem=drive/openstack/latest/user_data ansible_winrm_cert_key_pem=id_rsa ansible_winrm_transport=certificate\nssh ansible_user=windows ansible_port=2222 ansible_host=127.0.0.1 ansible_connection=ssh ansible_shell_type=powershell" > inventory
    - ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook --private-key id_rsa -i inventory --ssh-extra-args "-o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ControlMaster=auto -o ControlPersist=60s" --timeout=30 -v playbook.yml
  resource_group: virtual-machine
  needs: ["build-qemu"]

test-vbox:
  stage: test
  script:
    - vagrant box add --name mybox target-vbox/* 
    - vagrant up
  resource_group: virtual-machine
  needs: ["build-vbox"]

deploy-qemu:
  stage: deploy
  script:
    - test ! -z "$CI_TAG"   # Check CI_TAG is nonempty
    - openstack image create --file target-qemu/* --property hw_scsi_model=virtio-scsi --property hw_disk_bus=scsi --property hw_rng_model=virtio --property hw_qemu_guest_agent=yes --property os_require_quiesce=yes --property os_type=$CI_OS_TYPE --property os_distro=$CI_OS_DISTRO $CI_PROJECT_NAME-$CI_TAG
  when: manual
  needs: ["build-qemu", "test-qemu"]

deploy-vbox:
  stage: deploy
  script:
    - test ! -z "$CI_TAG"
    - echo TBD
  when: manual
  needs: ["build-vbox", "test-vbox"]
